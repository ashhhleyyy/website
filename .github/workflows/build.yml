name: Build with cargo

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/**
            ~/.cargo/registry/index/**
            ~/.cargo/registry/cache/**
            ~/.cargo/git/db/**
            target/**
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install NASM
        run: sudo apt install nasm

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install cross
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --force cross

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate index and upload assets to S3
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --release --package assetwrap -- --upload-s3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_REGION: ${{ secrets.S3_REGION }}

      - name: Display asset index
        run: cat assetindex.json

      - name: Build with cross (aarch64-unknown-linux-musl)
        run: cross build --release --target aarch64-unknown-linux-musl

      - name: Upload artifacts (arm64)
        uses: actions/upload-artifact@v2
        with:
          name: website-arm64
          path: target/aarch64-unknown-linux-musl/release/website

      - name: Build container image
        run: docker buildx build -t ghcr.io/ashhhleyyy/website:latest -t ghcr.io/ashhhleyyy/website:${GITHUB_SHA} --platform linux/arm64 --push .
